<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_mscdx_demand_demand_task</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_mscdx_demand_demand_task">assigned_toISNOTEMPTY^assigned_toVALCHANGES^EQ<item endquery="false" field="assigned_to" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="assigned_to" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>(FRU) Set actual assigend developer dem</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
  try {
    
	  /*
	   * Query for the parent record in the Demand table and update the Assigned to with the
	   * value of the Assigned to from current object.
	   */
	  var demandRecord = new GlideRecord('x_mscdx_demand_demand');
	  demandRecord.get(current.parent.sys_id);
	  
	  
		  demandRecord.assigned_to = current.assigned_to;
		  demandRecord.update();
	  
	  
  } catch(exception) {
    // Specify the name of the Business Rule in the log message
    var logger = new aspDebug();
    logger.log("Error in the Business Rule {0}: {1}", '<business_rule_name>', exception);
  } 
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>L18954</sys_created_by>
        <sys_created_on>2019-02-23 11:13:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3ebb07e1dbbf2b003d67ff361d961953</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>(FRU) Set actual assigend developer dem</sys_name>
        <sys_overrides/>
        <sys_package display_value="Demand" source="x_mscdx_demand">ae8094b3db6be700144cfbc61d9619fa</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Demand">ae8094b3db6be700144cfbc61d9619fa</sys_scope>
        <sys_update_name>sys_script_3ebb07e1dbbf2b003d67ff361d961953</sys_update_name>
        <sys_updated_by>L18954</sys_updated_by>
        <sys_updated_on>2019-02-27 13:11:38</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3ebb07e1dbbf2b003d67ff361d961953"/>
</record_update>
